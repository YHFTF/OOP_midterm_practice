/*
포인터와 레퍼런스

포인터 : 변수의 주소를 나타냄(변수 앞에 &를 붙이면 변수의 주소를 알 수 있음)
* : 포인터 변수가 가리키는 실제 값을 참조
int a[10];
int *p = a; // a의 주소를 p에 저장
에서 *p와 같은 표현을 나열해보면 :
*p = a[0];
*(p+1) = a[1];
*(p+2) = a[2];
...

1차원 배열 포인터
2차원 배열 포인터
포인터 배열
문자열 포인터 배열

const : 상수를 나타냄
const int *p : 포인터 p의 값을 수정할 수 없음.
const p : p가 가리키는 값을 수정할 수 없음.

레퍼런스
    int& ref = target; // target의 레퍼런스를 ref에 저장
    int target = 20;
    int& ref = target;
    ref = 30; // target = 30;
const 레퍼런스
    const int& ref = target; // target의 레퍼런스를 ref에 저장
    int target = 20;
    const int& ref = target;
    ref = 30; // error

    참조에 의한 호출에 많이 사용한다.

함수에서의 인자 전달
    함수 안에서만 사용하고 변경 하지 않을때 : 값으로 전달
    함수 안에서 사용하고 변경할 때 : 포인터로 전달

    const레퍼런스의 전달
        구조체나 클래스를 넘길때 사용
        레퍼런스를 전달하면 별명으로만 전달
    
    함수의 인자 전달 방법 - 포인터
    함수의 인자 전달 방법 - 래퍼런스
    함수의 인자 전달 방법 - 1차원 배열
    함수의 인자 전달 방법 - 2차원 배열 (1차원 원소 개수는 절대로 생략하지 않는다. int arr[][4]는 허용하지만 int arr[4][]는 허용하지 않는다.)
*/